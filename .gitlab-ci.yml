stages:
- test
- analyze
- build
- publish

###########################
# Templates               #
#                         #
# make sure all jobs use  #
# architecture tags.      #
###########################
.job: &job
  before_script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh setup
  dependencies: []
  tags:
  - amd64
  script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh

.job_aarch64: &job_aarch64
  <<: *job
  tags:
  - aarch64

.dind: &dind
  <<: *job
  tags:
  - amd64
  - dind
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  services:
  - docker:stable-dind

#######
# Tests
#######
.dispatcher: &dispatcher
  <<: *job
  stage: test
  image: hub.lavasoftware.org/lava/ci-images/$CI_JOB_NAME
  artifacts:
    reports:
      junit: dispatcher.xml

.server: &server
  <<: *job
  stage: test
  image: hub.lavasoftware.org/lava/ci-images/$CI_JOB_NAME
  artifacts:
    reports:
      junit:
      - common.xml
      - server.xml

dispatcher-debian-9: *dispatcher
server-debian-9: *server
dispatcher-debian-10: *dispatcher
server-debian-10: *server

###########
# Analyze #
###########
black:
  <<: *job
  stage: analyze
  image: hub.lavasoftware.org/lava/ci-images/codestyle

codestyle:
  <<: *job
  stage: analyze
  image: hub.lavasoftware.org/lava/ci-images/codestyle

coverage:
  <<: *job
  stage: analyze
  image: hub.lavasoftware.org/lava/ci-images/server-debian-9
  coverage: '/^TOTAL.+ (\d+\.\d+)%$/'
  artifacts:
    paths:
    - htmlcov
  only:
    refs:
    - master
    - tags

sast:
  <<: *dind
  stage: analyze
  allow_failure: true
  artifacts:
    paths: [gl-sast-report.json]

#########
# Build #
#########
doc:
  <<: *job
  stage: build
  image: debian:9
  artifacts:
    paths:
    - doc/v2/_build/html

debian-pkg:
  <<: *job
  stage: build
  image: hub.lavasoftware.org/lava/ci-images/debian-9-packaging
  artifacts:
    paths:
    - build/*.deb
    # handle native package - need to publish the source
    - build/*.tar.xz
    - build/*.dsc
    - build/*.changes
    - build/*.buildinfo

debian-10-pkg-amd64:
  <<: *job
  stage: build
  image: hub.lavasoftware.org/lava/ci-images/debian-10-amd64-packaging
  artifacts:
    paths:
    - build/*.deb
    # handle native package - need to publish the source
    - build/*.tar.xz
    - build/*.dsc
    - build/*.changes
    - build/*.buildinfo

debian-10-pkg-aarch64:
  <<: *job_aarch64
  stage: build
  image: hub.lavasoftware.org/lava/ci-images/debian-10-aarch64-packaging
  only:
    refs:
    - master
    - tags
  artifacts:
    # binary only build, no .dsc or .tar.xz
    paths:
    - build/*.deb
    - build/*.changes
    - build/*.buildinfo

###########
# Publish #
###########
.publish: &publish
  <<: *dind
  stage: publish
  dependencies: [debian-pkg]
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_JOB_NAME

lava-dispatcher: *publish
lava-server: *publish
