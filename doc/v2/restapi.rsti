LAVA makes the test results available directly from the instance,
without needing to go through ``lava-tool``. The results for any test
job which the user can view can be downloaded in :abbr:`CSV
(comma-separated value)` or YAML format.

For example, the results for test job number 123 are available in CSV
format using: ``https://validation.linaro.org/results/123/csv``. The
same results for job number 123 are available in YAML format using:
``https://validation.linaro.org/results/123/yaml``

If you know the test definition name, you can also download the
results for that specific test definition only in a similar way:
``https://validation.linaro.org/results/123/0_singlenode-advanced/csv``
for the data in CSV format and
``https://validation.linaro.org/results/123/0_singlenode-advanced/yaml``
for the YAML format.

Test definition names use a prefix to show the sequence within the
test job, for each namespace. The list of test definitions within a
test job can be retrieved using the Summary:
``https://validation.linaro.org/results/123/yaml_summary``

Some test jobs can be restricted to particular users or groups of
users. The results of these test jobs will be restricted in the same
way. To download these results, you will need to specify your username
and one of your :ref:`authentication_tokens` when using the REST
API. Remember to quote the URL if using it on the command line, to
avoid the & character being mis-interpreted by your shell, for
example:

.. code-block:: shell

    $ curl 'https://validation.linaro.org/results/123/0_singlenode-advanced/yaml?user=user.name&token=yourtokentextgoeshereononeverylongline'

Use the **Username** as specified in `your Profile </me>`_ - this may
differ from the username you use if logging in via LDAP.

.. caution:: Take care of your tokens - avoid using personal tokens in
   scripts and test definitions, or any other files that end up in
   public git repositories. Wherever supported, use ``https://`` when
   using a token to avoid it being sent in plain-text.

.. index:: results - pagination

.. _test_suite_result_pagination:

Chunking test suite results
===========================

When jobs have a large number of test results in a particular test suite,
it is advisable to use test case **chunking**, to provide pagination for
downloading test cases via the REST API.

Two special query string arguments are supported for allowing users to
**chunk** the test cases when downloading test suite results.

* **Limit** - determines how many results to read in this chunk

* **offset** - the number of results already received

Limit and offset are supported only for test suite exports (both csv
and yaml). Example:

.. code-block:: shell

    $ curl 'https://validation.linaro.org/results/123/0_singlenode-advanced/yaml?limit=100&offset=200'

    $ curl 'https://validation.linaro.org/results/123/0_singlenode-advanced/yaml?user=user.name&token=yourtokentextgoeshereononeverylongline&limit=100&offset=200'

To retrieve the full count of testcases in a single test suite (useful for
pagination), you can use the testcase-count REST API method, like so:

.. code-block:: shell

    $ curl 'https://validation.linaro.org/results/123/0_singlenode-advanced/+testcase-count?user=user.name&token=yourtokentextgoeshereononeverylongline'

.. note:: Test cases will be ordered by ID regardless of whether pagination is
   used or not. This applies to downloading test cases for a particular test
   suite only.
